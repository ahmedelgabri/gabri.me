// MIXINS

hide-text
  text-indent: 100%
  whitespace: nowrap
  overflow: hidden

// Fonts
fontSize(size = basefont)
  font-size: size * 1px
  font-size: (size / 10) * 1rem

headers(size)
  fontSize(size)
  margin-bottom: basefont * (lineheight / size) em

shorthand(weight = normal, size = basefont, lineHeight = lineheight)
  font-size: size
  font-weight: weight
  line-height: lineHeight

resizable(direction= both)
  resize: direction
  // Options are horizontal, vertical, both
  overflow: auto
  // Safari fix

// reset-filter
//   filter: unquote("progid:DXImageTransform.Microsoft.gradient(enabled = false)")

//MINE

insert(bg= #ff9, color= #000, textdec= none)
  background-color: bg
  color: color
  text-decoration: textdec

mark(bg= #ff9, color= #000, fontstyle= italic, fontweight= bold)
  background-color: bg
  color: color
  font-style: fontstyle
  font-weight: fontweight

ir()
  //image replacement
  display: block
  text-indent: -999em
  overflow: hidden
  background-repeat: no-repeat
  text-align: left
  direction: ltr

hidden()
  display: none
  visibility: hidden

visuallyhidden()
  position: absolute
  clip: rect(0 0 0 0)
  overflow: hidden
  margin: -1px
  padding: 0
  height: 1px
  width: 1px
  border: 0
  &:focus,
  &:active
    position: static
    clip: auto
    overflow: visible
    height: auto
    margin: 0
    width: auto

invisible()
  visibility: hidden

box-sizing(box= border-box)
  -webkit-box-sizing: box
  -moz-box-sizing: box
  -o-box-sizing: box
  box-sizing: box

offscreen(dir= ltr)
  if dir === ltr
    position: absolute
    left: -9999px
  else
    left: auto
    right: -9999px

// NEEDS CLEANING
// Center-align a block level element
center-block()
  display: block
  margin-left: auto
  margin-right: auto

// Grid System
fixed-container()
  width: siteWidth
  margin-left: auto
  margin-right: auto
  clearfix()

columns(columnSpan= 1)
  width: gridColumnWidth * columnSpan + gridGutterWidth * (columnSpan - 1)

offset(columnOffset= 1)
  margin-left: gridColumnWidth * columnOffset + gridGutterWidth * (columnOffset - 1) + extraSpace

// Necessary grid styles for every column to make them appear next to each other horizontally
gridColumn()
  display: inline
  float: left
  margin-left: gridGutterWidth

// makeColumn can be used to mark any element (e.g., .content-primary) as a column without changing markup to .span something
makeColumn(columnSpan= 1)
  gridColumn()
  columns(columnSpan)
